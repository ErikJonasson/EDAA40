(use 'edaa40.lab1 :reload)
(some even? '(1 2 3 4))
(every? even? '(1 2 3 4))
(every? odd? '(1 2 3 4))
(use 'edaa40.lab2 :reload)
update
(use 'clojure.core)
update
(use 'edaa40.lab2 :reload)
(page-rank TinyWeb 1000)
stackTrace
(use 'clojure.stacktrace)
(page-rank TinyWeb 1000)
(print-stack-trace)
(use 'edaa40.lab2 :reload)
(surf TinyWeb :a)
(surf TinyWeb :b)
(random-surfer TinyWeb 10)
(print-stack-trace (random-surfer TinyWeb 10))
*e
(print-stack-trace *e)
(into {} (map #(list % 0) (all-pages TinyWeb)))
(map #(list % 0) (all-pages TinyWeb))
(into {} '((1 2)(3 4)))
(into {} '(1 2 3 4))
(into {} 1 2)
(hashmap '((1 2)(3 4)))
zipmap
(hash-map '((1 2)(3 4)))
(random-surfer TinyWeb 10)
(into {} '([1 2][3 4]))
(use 'edaa40.lab2 :reload)
(random-surfer TinyWeb 10)
(page-rank TinyWeb 1000)
(use 'edaa40.lab2 :reload)
(page-rank TinyWeb 1000)
(page-rank TinyWeb 10000)
(use 'edaa40.lab2 :reload)
(page-rank TinyWeb 10000)
(use 'edaa40.lab2 :reload)
TinyWeb
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(use 'edaa40.lab2 :reload)¨
(all-pages TinyWeb)
(image-of {[0 1] [1 2] [0 2] [2 1] [2 3]} 0)
(image-of {[0 1] [1 2] [0 2] [2 1] [2 3] 0} )
(image-of #{[0 1] [1 2] [0 2] [2 1] [2 3]} 0 )
(use 'edaa40.lab2 :reload)¨
(no-links? TinyWeb 3)
(use 'edaa40.lab2 :reload)¨
(random-page TinyWeb)
(image-of TinyWeb 2)
(use 'edaa40.lab2 :reload)¨
(random-link TinyWeb 2)
(random-link TinyWeb 1)
(random-link TinyWeb 3)
(use 'edaa40.lab2 :reload)¨
(surf TinyWeb 1)
(use 'edaa40.lab2 :reload)¨
(use 'edaa40.lab2 :reload)
(surf TinyWeb 1)
(surf TinyWeb 2)
(surf TinyWeb 3)
(page-rank TinyWeb 100000)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(use 'edaa40.lab2 :reload)
(surf TinyWeb 3)
(page-rank TinyWeb 100000)
